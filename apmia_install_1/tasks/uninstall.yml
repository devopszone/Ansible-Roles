- set_fact:
     st_linux_dir: '{"failed": "False", "stat": {"exists": "False"}, "changed": "False"}'
- set_fact:
     st_linux_dir: "{{ st_linux_dir | from_json }}"
- set_fact:
     st_aix_dir: '{"failed": "False", "stat": {"exists": "False"}, "changed": "False"}'
- set_fact:
     st_aix_dir: "{{ st_aix_dir | from_json }}"
- set_fact:
     st_win_dir: '{"failed": "False", "stat": {"exists": "False"}, "changed": "False"}'
- set_fact:
     st_win_dir: "{{ st_win_dir | from_json }}"

- name: for Windows
  block:
    - name: Checking for apmia folder at path "{{ path_win }}" in machine "{{ ansible_nodename }}"
      win_stat:
        path: "{{ path_win }}/apmia"
      register: st_win

    - win_find:
        paths: "{{ path_win }}/apmia"
        file_type: directory
        patterns: "*"
      register: dir_files
      when: st_win.stat.exists == true

    - name: Removing Empty apmia dir
      win_file:
        state: absent
        path: "{{ path_win }}/apmia"
      register: removed_empty_dir
      when: st_win.stat.exists == true and dir_files.matched|int == 0

    - name: "check the status of apmia dir"
      win_stat:
        path: "{{ path_win }}/apmia"
      register: st_win_dir


    - name: Checking Status of apmia at path "{{ path_win }}" in machine "{{ ansible_nodename }}"
      win_command: apmia-ca-installer.bat status
      args:
        chdir: "{{ path_win }}/apmia/"
      register: status
      when: st_win_dir.stat.exists == true

    - name: Performing Uninstall Task in machine "{{ ansible_nodename }}"
      win_command: apmia-ca-installer.bat uninstall
      args:
        chdir: "{{ path_win }}/apmia/"
      register: outp_win
      ignore_errors: yes
      failed_when: false
      when: st_win_dir.stat.exists == true
  when: ansible_os_family == "Windows"



- name: Tasks List for Linux
  block:
    - name: Checking for apmia folder at path "{{ path_linux }}" in machine "{{ ansible_nodename }}"
      stat:
        path: "{{ path_linux }}/apmia"
      register: st_linux

    - find:
        paths: "{{ path_linux }}/apmia"
        file_type: directory
        patterns: "*"
      register: dir_files
      when: st_linux.stat.exists == true

    - name: Removing Empty apmia dir
      file:
        state: absent
        path: "{{ path_linux }}/apmia"
      register: removed_empty_dir
      when: st_linux.stat.exists == true and dir_files.matched|int == 0
 
    - name: "check the status of apmia dir"
      stat:
        path: "{{ path_linux }}/apmia"
      register: st_linux_dir
  
     
    - name: Checking Status of apmia at path "{{ path_linux }}" in machine "{{ ansible_nodename }}"
      command: ./apmia-ca-installer.sh status
      args:
        chdir: "{{ path_linux }}/apmia/"
      register: status
      when: st_linux_dir.stat.exists == true

    - name: Performing Uninstall Task in machine "{{ ansible_nodename }}"
      command: ./apmia-ca-installer.sh uninstall
      args:
        chdir: "{{ path_linux }}/apmia/"
      register: outp_linux
      ignore_errors: yes
      failed_when: false
      when: st_linux_dir.stat.exists == true
  when: ansible_os_family == "RedHat" or ansible_os_family == "Debian" or ansible_os_family == "Suse"


- name: Tasks List for AIX
  block:
    - name: Checking for apmia folder at path "{{ path_aix }}" in machine "{{ ansible_nodename }}"
      stat:
        path: "{{ path_aix }}/apmia"
      register: st_aix

    - find:
        paths: "{{ path_aix }}/apmia"
        file_type: directory
        patterns: "*"
      register: dir_files
      when: st_aix.stat.exists == true

    - name: Removing Empty apmia dir
      file:
        state: absent
        path: "{{ path_aix }}/apmia"
      register: removed_empty_dir
      when: st_aix.stat.exists == true and dir_files.matched|int == 0

    - name: Check status of apmia directory
      stat:
        path: "{{ path_aix }}/apmia"
      register: st_aix_dir

    - name: Checking Status of apmia at path "{{ path_aix }}" in machine "{{ ansible_nodename }}"
      command: ./apmia-ca-installer.sh status
      args:
        chdir: "{{ path_aix }}/apmia/"
      register: status
      when: st_aix_dir.stat.exists == true

    - name: Performing Uninstall Task in machine "{{ ansible_nodename }}"
      command: ./apmia-ca-installer.sh uninstall
      args:
        chdir: "{{ path_aix }}/apmia/"
      register: outp_aix
      ignore_errors: yes
      failed_when: false
      when: st_aix_dir.stat.exists == true

  when: ansible_os_family == "AIX"


- name: Status Block
  block:
    - debug:
        msg: "APMIA not present at path {{ path_win }} please check"
      when: st_win_dir.stat.exists == false

    - debug:
        var: outp_win.stdout_lines
  when: ansible_os_family == "Windows"
- name: Status Block
  block:
    - debug:
        msg: "APMIA not present at path {{ path_linux }} please check"
      when: st_linux_dir.stat.exists == false

    - debug:
        var: outp_linux.stdout_lines
      when: st_linux_dir.stat.exists == true 
  when: ansible_os_family == "RedHat" or ansible_os_family == "Debian" or ansible_os_family == "Suse"

- name: Status Block
  block:
    - debug:
        msg: "APMIA not present at path {{ path_aix }} please check"
      when: st_aix_dir.stat.exists == false
    - debug:
        var: outp_aix.stdout_lines
      when: st_aix_dir.stat.exists == true
  when: ansible_os_family == "AIX"

- name: Block for Report
  block:
    - template:
         src: ../template/report.j2
         dest: /etc/ansible/roles/apmia_install/report/report.log
      delegate_to: localhost
    - local_action: command  cat /etc/ansible/roles/apmia_install/report/report.log
      register: report
      run_once: true
    - debug:
        var: report.stdout_lines
      run_once: true
